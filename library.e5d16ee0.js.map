{"mappings":"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","sources":["src/library.js","src/js/buttons.js","node_modules/@swc/helpers/lib/_define_property.js"],"sourcesContent":["import './js/loader';\nimport './sass/index.scss';\nimport './js/api-key';\nimport './js/buttons';\nimport './js/local-storage';\n// import './js/pagination';\nimport './js/page-up';\nimport './js/array-of-genres';\nimport './js/footer-modal';\nimport './js/team-photo';\nimport './js/movie-modal';\nimport './js/modal-open';\nimport './js/modal-close';\n","import { API_KEY } from './api-key';\nimport { arrayOfGenres } from './array-of-genres';\n//заглушка айдішніків поки нема локального збереження\nconst id = [716037, 632639, 561743, 860741, 862504]; //заглушка для черги\nconst idw = [16037, 532630, 617430, 760412, 76504]; //заглушка для переглянутого\nlocalStorage.setItem('watched', JSON.stringify(idw));\nlocalStorage.setItem('queue', JSON.stringify(id));\n\nconst baseURL = 'https://api.themoviedb.org/3/movie/';\nconst savedWatchedFilms = JSON.parse(\n  localStorage.getItem('watched').split(',')\n);\nconst savedQueueFilms = JSON.parse(localStorage.getItem('queue').split(','));\n\nconst refs = {\n  btnQueue: document.querySelector('#queue'),\n  btnWatched: document.querySelector('#watched'),\n  div: document.querySelector('#library'),\n  text: document.querySelector('#text'),\n  btnWatched: document.querySelector('#watched'),\n  filmList: document.querySelector('.film_list'),\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueue);\nrefs.btnWatched.addEventListener('click', onBtnWatched);\n\nconst fetchQueueFilms = async id => {\n  const response = await fetch(`${baseURL}${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  // console.log(films);\n  return films;\n};\n\nfunction posterLinkGenerate(film) {\n  if (film.poster_path !== null) {\n    return `\"https://image.tmdb.org/t/p/w500${film.poster_path}\"`;\n  }\n  return `\"https://raw.githubusercontent.com/Alexandra-Makarenko/filmoteka-js-team-project/main/src/images/no-poster.jpg\"`;\n}\n\nfunction onBtnQueue() {\n  // hideMessage();\n  refs.filmList.innerHTML = '';\n  if (!savedQueueFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>';\n  }\n\n  savedQueueFilms.map(film =>\n    fetchQueueFilms(film).then(film => {\n      rendOneCard(film).then(r => {\n        refs.filmList.insertAdjacentHTML('beforeend', r);\n      });\n    })\n  );\n}\n\nfunction rendOneCard(film) {\n  const genres = decipherGenresIds(film);\n  const yearOfRelease = onYearOfFilm(film);\n  return patternOfCard(film, genres, yearOfRelease);\n}\n\nfunction decipherGenresIds(film) {\n  if (film.genres.length === 0) {\n    return 'Without genres';\n  }\n  return arrayOfGenres\n    .then(r => {\n      return r\n        .filter(genre => {\n          for (const id of film.genres) {\n            if (id.id === genre.id) {\n              return genre.name;\n            }\n          }\n        })\n        .map(genre => genre.name);\n    })\n    .then(r => {\n      if (r.length < 3) {\n        return r;\n      }\n      return [...[...r].slice(0, 2), ...['Other']];\n    });\n}\n\nfunction onYearOfFilm(film) {\n  const yearOfRelease = film.release_date.split('-');\n  return yearOfRelease;\n}\n\nasync function patternOfCard(film, genres, yearOfRelease) {\n  if (genres === 'Without genres') {\n    return `<li film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    film-id=\"${film.id}\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n    <div class=\"film-list__item-details\">\n      <span class=\"film-list__item-genres\">${genres}</span>\n      <span class=\"film-list__item-strip\">|</span>\n      <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${film.vote_average.toFixed(\n        1\n      )}&nbsp;</span>\n    </div>\n  </div>\n</li>`;\n  }\n  const asyncGenres = await genres.then(r => r);\n  return `<li film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    film-id=\"${film.id}\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n    <div class=\"film-list__item-details\">\n      <span class=\"film-list__item-genres\">${asyncGenres.join(', ')}</span>\n      <span class=\"film-list__item-strip\">|</span>\n      <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${film.vote_average.toFixed(\n        1\n      )}&nbsp;</span>\n    </div>\n  </div>\n</li>`;\n}\n\n//заховати повідомлення \"будь ласка, оберіть категорію\"\n// function hideMessage(){\n//   if(refs.text.classList.contains(\"library-message\")){\n//     refs.text.classList.remove('library-message')\n//     refs.text.classList.add('library-message-hidden')\n//   }\n// }\n\nconst fetchWatchedFilms = async idw => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${idw}?api_key=${API_KEY}`\n  );\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnWatched() {\n  // hideMessage();\n  refs.filmList.innerHTML = '';\n  if (!savedWatchedFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>';\n  }\n  savedWatchedFilms.map(film =>\n    fetchWatchedFilms(film).then(film => {\n      rendOneCard(film).then(r => {\n        refs.filmList.insertAdjacentHTML('beforeend', r);\n      });\n    })\n  );\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n"],"names":["parcelRequire","$bpxeT","Object","defineProperty","$cec85eba0a352189$exports","value","default","obj","key","enumerable","configurable","writable","localStorage","setItem","JSON","stringify","$c07c620d873608c6$var$_obj","$c07c620d873608c6$var$savedWatchedFilms","parse","getItem","split","$c07c620d873608c6$var$savedQueueFilms","$c07c620d873608c6$var$refs","btnQueue","document","querySelector","btnWatched","div","text","$parcel$interopDefault","addEventListener","filmList","innerHTML","map","film1","$c07c620d873608c6$var$fetchQueueFilms","then","film","$c07c620d873608c6$var$rendOneCard","r","insertAdjacentHTML","film2","$c07c620d873608c6$var$fetchWatchedFilms","$2TvXO","mark","_callee","id1","response","films","fetch","concat","$hM3Qt","API_KEY","_ctx","sent","json","$c07c620d873608c6$var$posterLinkGenerate","poster_path","genres","length","$2cELT","arrayOfGenres","filter","genre","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","id","name","err","return","$8nrFW","slice","$c07c620d873608c6$var$decipherGenresIds","yearOfRelease","release_date","$c07c620d873608c6$var$onYearOfFilm","$c07c620d873608c6$var$_patternOfCard","apply","this","arguments","$c07c620d873608c6$var$patternOfCard","asyncGenres","title","vote_average","toFixed","join","idw1"],"version":3,"file":"library.e5d16ee0.js.map"}