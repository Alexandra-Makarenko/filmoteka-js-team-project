{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,SAKwBE,aAAXC,QAAQ,UAAWC,KAAKC,UADzB,CAAC,MAAO,OAAQ,OAAQ,OAAQ,SAE5CH,aAAaC,QAAQ,QAASC,KAAKC,UAHxB,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UAK5C,MACMC,EAAoBF,KAAKG,MAAML,aAAaM,QAAQ,WAAWC,MAAM,MACrEC,EAAkBN,KAAKG,MAAML,aAAaM,QAAQ,SAASC,MAAM,MAEjEE,EAAO,CACXC,SAAUC,SAASC,cAAc,UACjCC,WAAYF,SAASC,cAAc,YACnCE,IAAKH,SAASC,cAAc,YAC5BG,KAAMJ,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,YACnCI,SAAUL,SAASC,cAAc,eAGnCH,EAAKC,SAASO,iBAAiB,SAgB/B,WAEIR,EAAKO,SAASE,UAAY,GACvBV,IACHC,EAAKO,SAASE,UAAY,gCAE5BV,EAAgBW,KAAIC,GAnBEC,OAAOC,IAC7B,MAAMC,QAAiBC,MAAM,sCAAaF,aAAcvB,EAAA0B,WAExD,aADoBF,EAASG,MACjB,EAgBgBC,CAAgBP,GAAMQ,MAAKC,IAErD,MAAMC,EAAgBD,EAAKE,aAAaxB,MAAM,KAC9CE,EAAKO,SAASgB,mBAAmB,YAAY,yDAEvCC,EAAmBJ,2KAMWA,EAAKK,6GAEHJ,EAAc,qDACfD,EAAKM,6CAEnC,K,IArCX1B,EAAKI,WAAWI,iBAAiB,SAwDjC,WAEIR,EAAKO,SAASE,UAAY,GACvBd,IACHK,EAAKO,SAASE,UAAY,gCAE5Bd,EAAkBe,KAAIiB,GAZEf,OAAOgB,IAC/B,MAAMd,QAAiBC,MAAM,sCAAsCa,aAAetC,EAAA0B,WAElF,aADoBF,EAASG,MACjB,EASkBY,CAAkBF,GAAMR,MAAKC,IAEzD,MAAMC,EAAgBD,EAAKE,aAAaxB,MAAM,KAC9CE,EAAKO,SAASgB,mBAAmB,YAAY,yDAEvCC,EAAmBJ,2KAMWA,EAAKK,6GAEHJ,EAAc,qDACfD,EAAKM,6CAEnC,K,IAtEX,SAASF,EAAmBJ,GAC1B,OAAyB,OAArBA,EAAKU,YACA,mCAAmCV,EAAKU,eAE1C,iH","sources":["src/library.js","src/js/buttons.js"],"sourcesContent":["import './js/loader';\nimport './sass/index.scss';\nimport './js/api-key';\nimport './js/buttons';\nimport './js/local-storage';\n// import './js/pagination';\nimport './js/page-up';\nimport './js/array-of-genres';\nimport './js/footer-modal';\nimport './js/team-photo';\nimport './js/movie-modal';\nimport './js/modal-open';\nimport './js/modal-close';\n","import { API_KEY } from './api-key';\n\n//заглушка айдішніків поки нема локального збереження\nconst id = [716037, 632639, 561743, 860741, 862504] //заглушка для черги\nconst idw = [16037, 532630, 617430, 760412, 76504] //заглушка для переглянутого\nlocalStorage.setItem('watched', JSON.stringify(idw))\nlocalStorage.setItem('queue', JSON.stringify(id))\n\nconst baseURL = \"https://api.themoviedb.org/3/movie/\"\nconst savedWatchedFilms = JSON.parse(localStorage.getItem('watched').split(','))\nconst savedQueueFilms = JSON.parse(localStorage.getItem('queue').split(','))\n\nconst refs = {\n  btnQueue: document.querySelector('#queue'),\n  btnWatched: document.querySelector('#watched'),\n  div: document.querySelector('#library'),\n  text: document.querySelector('#text'),\n  btnWatched: document.querySelector('#watched'),\n  filmList: document.querySelector('.film_list'),\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueue);\nrefs.btnWatched.addEventListener('click', onBtnWatched)\n\nconst fetchQueueFilms = async (id) => {\n  const response = await fetch(`${baseURL}${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n};\n  \nfunction posterLinkGenerate(film) {\n  if (film.poster_path !== null) {\n    return `\"https://image.tmdb.org/t/p/w500${film.poster_path}\"`;\n  }\n  return `\"https://raw.githubusercontent.com/Alexandra-Makarenko/filmoteka-js-team-project/main/src/images/no-poster.jpg\"`;\n}\n\nfunction onBtnQueue() {\n  // hideMessage();\n    refs.filmList.innerHTML = '';\n  if (!savedQueueFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>'\n  } \n  savedQueueFilms.map(film => fetchQueueFilms(film).then(film => \n  {\n    const yearOfRelease = film.release_date.split('-');\n    refs.filmList.insertAdjacentHTML(\"beforeend\",`<li id=\"\" class=\"film-list__item\">\n    <img\n    src=${posterLinkGenerate(film)}\n    alt=\"Movie Name\"\n    class=\"film-list__item-poster\"\n    loading=\"lazy\"\n    />\n    <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n   <span class=\"film-list__item-genres\">жанри</span>\n   <span class=\"film-list__item-genres\">${yearOfRelease[0]}</span>\n    <span class=\"film-list__item-rate\">${film.vote_average}</span>\n    </div>\n    </li>`)\n}))\n\n}\n\n//заховати повідомлення \"будь ласка, оберіть категорію\"\n// function hideMessage(){\n//   if(refs.text.classList.contains(\"library-message\")){\n//     refs.text.classList.remove('library-message')\n//     refs.text.classList.add('library-message-hidden')\n//   }\n// }\n\nconst fetchWatchedFilms = async (idw) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${idw}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnWatched() {\n  // hideMessage();\n    refs.filmList.innerHTML = '';\n  if (!savedWatchedFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>'\n  } \n  savedWatchedFilms.map(film => fetchWatchedFilms(film).then(film => \n  {\n    const yearOfRelease = film.release_date.split('-');\n    refs.filmList.insertAdjacentHTML(\"beforeend\",`<li id=\"\" class=\"film-list__item\">\n    <img\n    src=${posterLinkGenerate(film)}\n    alt=\"Movie Name\"\n    class=\"film-list__item-poster\"\n    loading=\"lazy\"\n    />\n    <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n   <span class=\"film-list__item-genres\">жанри</span>\n   <span class=\"film-list__item-genres\">${yearOfRelease[0]}</span>\n    <span class=\"film-list__item-rate\">${film.vote_average}</span>\n    </div>\n    </li>`)\n}))\n\n}\n"],"names":["parcelRequire","$fPgXx","localStorage","setItem","JSON","stringify","$9b6cfdef6aa0953f$var$savedWatchedFilms","parse","getItem","split","$9b6cfdef6aa0953f$var$savedQueueFilms","$9b6cfdef6aa0953f$var$refs","btnQueue","document","querySelector","btnWatched","div","text","filmList","addEventListener","innerHTML","map","film1","async","id1","response","fetch","API_KEY","json","$9b6cfdef6aa0953f$var$fetchQueueFilms","then","film","yearOfRelease","release_date","insertAdjacentHTML","$9b6cfdef6aa0953f$var$posterLinkGenerate","title","vote_average","film2","idw1","$9b6cfdef6aa0953f$var$fetchWatchedFilms","poster_path"],"version":3,"file":"library.560523a7.js.map"}