{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,KCCAC,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPL,OAAOC,eAAeI,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,gCDbLK,EAAK,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAC5HC,aAAaC,QAAQ,UAAWC,KAAKC,UAAUJ,IAC/CC,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,IAE7C,IAIaK,EAHPC,EAAoBH,KAAKI,MAAMN,aAAaO,QAAQ,WAAWC,MAAM,MACrEC,EAAkBP,KAAKI,MAAMN,aAAaO,QAAQ,SAASC,MAAM,MAEjEE,GAAON,EAOZ,CANCO,SAAUC,SAASC,cAAc,UACjCC,WAAYF,SAASC,cAAc,YACnCE,IAAKH,SAASC,cAAc,YAC5BG,KAAMJ,SAASC,cAAc,UAC7BI,EAAA1B,EAAA,CALWa,EAKX,aAAYQ,SAASC,cAAc,aACnCI,EAAA1B,EAAA,CANWa,EAMX,WAAUQ,SAASC,cAAc,eANtBT,GASbM,EAAKC,SAASO,iBAAiB,SAS/B,WAEOT,IACHC,EAAKS,SAASC,UAAY,gCAE5BX,EAAgBY,KAAI,SAAAC,G,OAAQC,EAAgBD,GAAME,MAAK,SAAAC,GAErD,IAAMC,EAAgBD,EAAKE,aAAanB,MAAM,KAC9CE,EAAKS,SAASS,mBAAmB,YAAY,iBAEvCC,OAFwDJ,EAAKK,GAAG,gDAQlCD,OAN9BE,mBAAmBN,GAAM,sKAOOI,OADFJ,EAAKO,MAAM,mDAETH,OADAI,OAAOC,KAAK,MAAM,qDAEbL,OADLH,EAAc,GAAG,0DACMG,OAAlBJ,EAAKU,aAAa,iD,OAK/DzB,EAAKS,SAASC,UAAY,E,IAhC5BV,EAAKI,WAAWI,iBAAiB,SAiDjC,WAEOb,IACHK,EAAKS,SAASC,UAAY,gCAE5Bf,EAAkBgB,KAAI,SAAAe,G,OAAQC,EAAkBD,GAAMZ,MAAK,SAAAC,GAEzD,IAAMC,EAAgBD,EAAKE,aAAanB,MAAM,KAC9CE,EAAKS,SAASS,mBAAmB,YAAY,iBAEvCC,OAFwDJ,EAAKK,GAAG,gDAQlCD,OAN9BE,mBAAmBN,GAAM,sKAOOI,OADFJ,EAAKO,MAAM,mDAETH,OADAI,OAAOC,KAAK,MAAM,qDAEbL,OADLH,EAAc,GAAG,0DACMG,OAAlBJ,EAAKU,aAAa,iD,OAK/DzB,EAAKS,SAASC,UAAY,E,IAvE5B,I,EAAMG,G,EAAkBN,EAAA9B,EAAA,CAAA8B,EAAAqB,GAAAC,MAAA,SAAAC,EAAOC,G,IACvBC,EACAC,E,kFADiBC,MAAM,GAAaf,OAjB5B,uCAiB0CA,OAAdY,EAAG,aAAmBZ,OAARgB,EAAAC,U,cAAlDJ,EAAQK,EAAAC,K,SACMN,EAASO,O,cAAvBN,EAAKI,EAAAC,K,kBACJL,G,oDAHsBF,G,iCAyC/B,IAAMJ,EAAiB,W,MAAGpB,EAAA9B,EAAA,CAAA8B,EAAAqB,GAAAC,MAAA,SAAAC,EAAOU,G,IACzBR,EACAC,E,kFADiBC,MAAM,sCAAoDf,OAAdqB,EAAG,aAAmBrB,OAARgB,EAAAC,U,cAA3EJ,EAAQK,EAAAC,K,SACMN,EAASO,O,cAAvBN,EAAKI,EAAAC,K,kBACJL,G,2DAHwBO,G,gCAAV,E","sources":["src/js/buttons.js","node_modules/@swc/helpers/lib/_define_property.js"],"sourcesContent":["import { API_KEY } from './api-key';\n\n//заглушка айдішніків поки нема локального збереження\nconst id = [616037, 532639, 361743, 760741, 762504, 616037, 532639, 361743, 760741, 762504, 616037, 532639, 361743, 760741, 762504]\nlocalStorage.setItem('watched', JSON.stringify(id))\nlocalStorage.setItem('queue', JSON.stringify(id))\n\nconst baseURL = \"https://api.themoviedb.org/3/movie/\"\nconst savedWatchedFilms = JSON.parse(localStorage.getItem('watched').split(','))\nconst savedQueueFilms = JSON.parse(localStorage.getItem('queue').split(','))\n\nconst refs = {\n  btnQueue: document.querySelector('#queue'),\n  btnWatched: document.querySelector('#watched'),\n  div: document.querySelector('#library'),\n  text: document.querySelector('#text'),\n  btnWatched: document.querySelector('#watched'),\n  filmList: document.querySelector('.film_list'),\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueue);\nrefs.btnWatched.addEventListener('click', onBtnWatched)\n\nconst fetchQueueFilms = async (id) => {\n  const response = await fetch(`${baseURL}${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n  };\n\nfunction onBtnQueue() {\n  // hideMessage();\n  if (!savedQueueFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>'\n  } \n  savedQueueFilms.map(film => fetchQueueFilms(film).then(film => \n  {\n    const yearOfRelease = film.release_date.split('-');\n    refs.filmList.insertAdjacentHTML(\"beforeend\",`<div film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"Movie Name\"\n    class=\"film-list__item-poster\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n   <span class=\"film-list__item-genres\">${genres.join(', ')}</span>\n   <span class=\"film-list__item-year\">| ${yearOfRelease[0]}</span>\n    <span class=\"film-list__item-rate\">&nbsp;${film.vote_average}&nbsp;</span>\n    </div>\n  </div>\n  </div>`)\n}))\n  refs.filmList.innerHTML = '';\n}\n\n//заховати повідомлення \"будь ласка, оберіть категорію\"\n// function hideMessage(){\n//   if(refs.text.classList.contains(\"library-message\")){\n//     refs.text.classList.remove('library-message')\n//     refs.text.classList.add('library-message-hidden')\n//   }\n// }\n\nconst fetchWatchedFilms = async (id) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnWatched() {\n  // hideMessage();\n  if (!savedWatchedFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>'\n  } \n  savedWatchedFilms.map(film => fetchWatchedFilms(film).then(film => \n  {\n    const yearOfRelease = film.release_date.split('-');\n    refs.filmList.insertAdjacentHTML(\"beforeend\",`<div film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"Movie Name\"\n    class=\"film-list__item-poster\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n   <span class=\"film-list__item-genres\">${genres.join(', ')}</span>\n   <span class=\"film-list__item-year\">| ${yearOfRelease[0]}</span>\n    <span class=\"film-list__item-rate\">&nbsp;${film.vote_average}&nbsp;</span>\n    </div>\n  </div>\n  </div>`)\n}))\n  refs.filmList.innerHTML = '';\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n"],"names":["$bpxeT","parcelRequire","Object","defineProperty","$cec85eba0a352189$exports","value","default","obj","key","enumerable","configurable","writable","$c07c620d873608c6$var$id","localStorage","setItem","JSON","stringify","$c07c620d873608c6$var$_obj","$c07c620d873608c6$var$savedWatchedFilms","parse","getItem","split","$c07c620d873608c6$var$savedQueueFilms","$c07c620d873608c6$var$refs","btnQueue","document","querySelector","btnWatched","div","text","$parcel$interopDefault","addEventListener","filmList","innerHTML","map","film1","$c07c620d873608c6$var$fetchQueueFilms","then","film","yearOfRelease","release_date","insertAdjacentHTML","concat","id","posterLinkGenerate","title","genres","join","vote_average","film2","$c07c620d873608c6$var$fetchWatchedFilms","$2TvXO","mark","_callee","id1","response","films","fetch","$hM3Qt","API_KEY","_ctx","sent","json","id2"],"version":3,"file":"library.13129567.js.map"}