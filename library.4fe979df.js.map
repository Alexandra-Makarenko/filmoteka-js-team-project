{"mappings":"iiBAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,KCCAE,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPL,OAAOC,eAAeI,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,gCDXaK,aAAXC,QAAQ,UAAWC,KAAKC,UADzB,CAAC,MAAO,OAAQ,OAAQ,OAAQ,SAE5CH,aAAaC,QAAQ,QAASC,KAAKC,UAHxB,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UAK5C,IAIaC,EAHPC,EAAoBH,KAAKI,MAAMN,aAAaO,QAAQ,WAAWC,MAAM,MACrEC,EAAkBP,KAAKI,MAAMN,aAAaO,QAAQ,SAASC,MAAM,MAEjEE,GAAON,EAOZ,CANCO,SAAUC,SAASC,cAAc,UACjCC,WAAYF,SAASC,cAAc,YACnCE,IAAKH,SAASC,cAAc,YAC5BG,KAAMJ,SAASC,cAAc,UAC7BI,EAAAzB,EAAA,CALWY,EAKX,aAAYQ,SAASC,cAAc,aACnCI,EAAAzB,EAAA,CANWY,EAMX,WAAUQ,SAASC,cAAc,eANtBT,GASbM,EAAKC,SAASO,iBAAiB,SAgB/B,WAEIR,EAAKS,SAASC,UAAY,GACvBX,IACHC,EAAKS,SAASC,UAAY,gCAE5BX,EAAgBY,KAAI,SAAAC,G,OAAQC,EAAgBD,GAAME,MAAK,SAAAC,GAErD,IAAMC,EAAgBD,EAAKE,aAAanB,MAAM,KAC9CE,EAAKS,SAASS,mBAAmB,YAAY,yDAGtCC,OADDC,EAAmBL,GAAM,eAMKI,OAL7BJ,EAAKM,MAAM,qJAQkBF,OAHAJ,EAAKM,MAAM,wJAIFF,OADTH,EAAc,GAAG,4DAEnBG,OADWJ,EACpCO,aAAcC,QAAQ,GAAG,wC,UArCtCvB,EAAKI,WAAWI,iBAAiB,SA0DjC,WAEIR,EAAKS,SAASC,UAAY,GACvBf,IACHK,EAAKS,SAASC,UAAY,gCAE5Bf,EAAkBgB,KAAI,SAAAa,G,OAAQC,EAAkBD,GAAMV,MAAK,SAAAC,GAEzD,IAAMC,EAAgBD,EAAKE,aAAanB,MAAM,KAC9CE,EAAKS,SAASS,mBAAmB,YAAY,yDAGtCC,OADDC,EAAmBL,GAAM,eAMKI,OAL7BJ,EAAKM,MAAM,qJAQkBF,OAHAJ,EAAKM,MAAM,wJAIFF,OADTH,EAAc,GAAG,4DAEnBG,OADWJ,EACpCO,aAAcC,QAAQ,GAAG,wC,UA9EtC,I,EAAMV,G,EAAkBN,EAAA5B,EAAA,CAAA4B,EAAAmB,GAAAC,MAAA,SAAAC,EAAOC,G,IACvBC,EACAC,E,kFADiBC,MAAM,GAAab,OAjB5B,uCAiB0CA,OAAdU,EAAG,aAAmBV,OAARc,EAAAC,U,cAAlDJ,EAAQK,EAAAC,K,SACMN,EAASO,O,cAAvBN,EAAKI,EAAAC,K,kBACJL,G,oDAHsBF,G,iCAM/B,SAAST,EAAmBL,GAC1B,OAAyB,OAArBA,EAAKuB,YACA,mCAAoDnB,OAAjBJ,EAAKuB,YAAY,KAErD,iH,CAwCV,IAAMb,EAAiB,W,MAAGlB,EAAA5B,EAAA,CAAA4B,EAAAmB,GAAAC,MAAA,SAAAC,EAAOW,G,IACzBT,EACAC,E,kFADiBC,MAAM,sCAAqDb,OAAfoB,EAAI,aAAmBpB,OAARc,EAAAC,U,cAA5EJ,EAAQK,EAAAC,K,SACMN,EAASO,O,cAAvBN,EAAKI,EAAAC,K,kBACJL,G,2DAHwBQ,G,gCAAV,G","sources":["src/library.js","src/js/buttons.js","node_modules/@swc/helpers/lib/_define_property.js"],"sourcesContent":["import './js/loader';\nimport './sass/index.scss';\nimport './js/api-key';\nimport './js/buttons';\nimport './js/local-storage';\n// import './js/pagination';\nimport './js/page-up';\nimport './js/array-of-genres';\nimport './js/footer-modal';\nimport './js/team-photo';\nimport './js/movie-modal';\nimport './js/modal-open';\nimport './js/modal-close';\n","import { API_KEY } from './api-key';\n\n//заглушка айдішніків поки нема локального збереження\nconst id = [716037, 632639, 561743, 860741, 862504] //заглушка для черги\nconst idw = [16037, 532630, 617430, 760412, 76504] //заглушка для переглянутого\nlocalStorage.setItem('watched', JSON.stringify(idw))\nlocalStorage.setItem('queue', JSON.stringify(id))\n\nconst baseURL = \"https://api.themoviedb.org/3/movie/\"\nconst savedWatchedFilms = JSON.parse(localStorage.getItem('watched').split(','))\nconst savedQueueFilms = JSON.parse(localStorage.getItem('queue').split(','))\n\nconst refs = {\n  btnQueue: document.querySelector('#queue'),\n  btnWatched: document.querySelector('#watched'),\n  div: document.querySelector('#library'),\n  text: document.querySelector('#text'),\n  btnWatched: document.querySelector('#watched'),\n  filmList: document.querySelector('.film_list'),\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueue);\nrefs.btnWatched.addEventListener('click', onBtnWatched)\n\nconst fetchQueueFilms = async (id) => {\n  const response = await fetch(`${baseURL}${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n};\n  \nfunction posterLinkGenerate(film) {\n  if (film.poster_path !== null) {\n    return `\"https://image.tmdb.org/t/p/w500${film.poster_path}\"`;\n  }\n  return `\"https://raw.githubusercontent.com/Alexandra-Makarenko/filmoteka-js-team-project/main/src/images/no-poster.jpg\"`;\n}\n\nfunction onBtnQueue() {\n  // hideMessage();\n    refs.filmList.innerHTML = '';\n  if (!savedQueueFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>'\n  } \n  savedQueueFilms.map(film => fetchQueueFilms(film).then(film => \n  {\n    const yearOfRelease = film.release_date.split('-');\n    refs.filmList.insertAdjacentHTML(\"beforeend\",`<li id=\"\" class=\"film-list__item\">\n    <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    loading=\"lazy\"\n    />\n    <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n   <span class=\"film-list__item-genres\">жанри</span>\n   <span class=\"film-list__item-strip\">|</span>\n   <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${(\n        film.vote_average).toFixed(1)}&nbsp;</span>\n    </div>\n    </li>`)\n}))\n\n}\n\n//заховати повідомлення \"будь ласка, оберіть категорію\"\n// function hideMessage(){\n//   if(refs.text.classList.contains(\"library-message\")){\n//     refs.text.classList.remove('library-message')\n//     refs.text.classList.add('library-message-hidden')\n//   }\n// }\n\nconst fetchWatchedFilms = async (idw) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${idw}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnWatched() {\n  // hideMessage();\n    refs.filmList.innerHTML = '';\n  if (!savedWatchedFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>'\n  } \n  savedWatchedFilms.map(film => fetchWatchedFilms(film).then(film => \n  {\n    const yearOfRelease = film.release_date.split('-');\n    refs.filmList.insertAdjacentHTML(\"beforeend\",`<li id=\"\" class=\"film-list__item\">\n    <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    loading=\"lazy\"\n    />\n    <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n   <span class=\"film-list__item-genres\">жанри</span>\n   <span class=\"film-list__item-strip\">|</span>\n   <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${(\n        film.vote_average).toFixed(1)}&nbsp;</span>\n    </div>\n    </li>`)\n}))\n\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n"],"names":["parcelRequire","$bpxeT","Object","defineProperty","$cec85eba0a352189$exports","value","default","obj","key","enumerable","configurable","writable","localStorage","setItem","JSON","stringify","$c07c620d873608c6$var$_obj","$c07c620d873608c6$var$savedWatchedFilms","parse","getItem","split","$c07c620d873608c6$var$savedQueueFilms","$c07c620d873608c6$var$refs","btnQueue","document","querySelector","btnWatched","div","text","$parcel$interopDefault","addEventListener","filmList","innerHTML","map","film1","$c07c620d873608c6$var$fetchQueueFilms","then","film","yearOfRelease","release_date","insertAdjacentHTML","concat","$c07c620d873608c6$var$posterLinkGenerate","title","vote_average","toFixed","film2","$c07c620d873608c6$var$fetchWatchedFilms","$2TvXO","mark","_callee","id1","response","films","fetch","$hM3Qt","API_KEY","_ctx","sent","json","poster_path","idw1"],"version":3,"file":"library.4fe979df.js.map"}