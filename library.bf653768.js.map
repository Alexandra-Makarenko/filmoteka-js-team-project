{"mappings":"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","sources":["src/library.js","src/js/buttons.js"],"sourcesContent":["import './js/loader';\nimport './sass/index.scss';\nimport './js/api-key';\nimport './js/buttons';\n// import './js/pagination';\nimport './js/page-up';\nimport './js/array-of-genres';\nimport './js/footer-modal';\nimport './js/team-photo';\nimport './js/movie-modal-local-storage';\nimport './js/modal-open';\nimport './js/modal-close';\n","import { API_KEY } from './api-key';\nimport { arrayOfGenres } from './array-of-genres';\nimport { offLoader, onLoader } from \"../js/loader\";\n//заглушка айдішніків поки нема локального збереження\nconst id = [716037, 632639, 561743, 860741, 862504]; //заглушка для черги\nconst idw = [16037, 532630, 617430, 760412, 76504]; //заглушка для переглянутого\nlocalStorage.setItem('watched', JSON.stringify(idw));\nlocalStorage.setItem('queue', JSON.stringify(id));\n\nconst baseURL = 'https://api.themoviedb.org/3/movie/';\nconst savedWatchedFilms = JSON.parse(\n  localStorage.getItem('watched').split(',')\n);\nconst savedQueueFilms = JSON.parse(localStorage.getItem('queue').split(','));\n\nconst refs = {\n  btnQueue: document.querySelector('#queue'),\n  btnWatched: document.querySelector('#watched'),\n  div: document.querySelector('#library'),\n  text: document.querySelector('#text'),\n  btnWatched: document.querySelector('#watched'),\n  filmList: document.querySelector('.film_list'),\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueue);\nrefs.btnWatched.addEventListener('click', onBtnWatched);\n\nconst fetchQueueFilms = async id => {\n  const response = await fetch(`${baseURL}${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  // console.log(films);\n  return films;\n};\n\nfunction posterLinkGenerate(film) {\n  if (film.poster_path !== null) {\n    return `\"https://image.tmdb.org/t/p/w500${film.poster_path}\"`;\n  }\n  return `\"https://raw.githubusercontent.com/Alexandra-Makarenko/filmoteka-js-team-project/main/src/images/no-poster.jpg\"`;\n}\n\nfunction onBtnQueue() {\n  onLoader();\n  hideMessage();\n  refs.filmList.innerHTML = '';\n  if (!savedQueueFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>';\n    offLoader();\n  }\n\n  savedQueueFilms.map(film =>\n    fetchQueueFilms(film).then(film => {\n      rendOneCard(film).then(r => {\n        refs.filmList.insertAdjacentHTML('beforeend', r);\n        offLoader();\n      });\n    })\n  );\n}\n\nfunction rendOneCard(film) {\n  const genres = decipherGenresIds(film);\n  const yearOfRelease = onYearOfFilm(film);\n  return patternOfCard(film, genres, yearOfRelease);\n}\n\nfunction decipherGenresIds(film) {\n  if (film.genres.length === 0) {\n    return 'Without genres';\n  }\n  return arrayOfGenres\n    .then(r => {\n      return r\n        .filter(genre => {\n          for (const id of film.genres) {\n            if (id.id === genre.id) {\n              return genre.name;\n            }\n          }\n        })\n        .map(genre => genre.name);\n    })\n    .then(r => {\n      if (r.length < 3) {\n        return r;\n      }\n      return [...[...r].slice(0, 2), ...['Other']];\n    });\n}\n\nfunction onYearOfFilm(film) {\n  const yearOfRelease = film.release_date.split('-');\n  return yearOfRelease;\n}\n\nasync function patternOfCard(film, genres, yearOfRelease) {\n  if (genres === 'Without genres') {\n    return `<li film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    film-id=\"${film.id}\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n    <div class=\"film-list__item-details\">\n      <span class=\"film-list__item-genres\">${genres}</span>\n      <span class=\"film-list__item-strip\">|</span>\n      <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${film.vote_average.toFixed(\n        1\n      )}&nbsp;</span>\n    </div>\n  </div>\n</li>`;\n  }\n  const asyncGenres = await genres.then(r => r);\n  return `<li film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    film-id=\"${film.id}\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n    <div class=\"film-list__item-details\">\n      <span class=\"film-list__item-genres\">${asyncGenres.join(', ')}</span>\n      <span class=\"film-list__item-strip\">|</span>\n      <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${film.vote_average.toFixed(\n        1\n      )}&nbsp;</span>\n    </div>\n  </div>\n</li>`;\n}\n\n//заховати повідомлення \"будь ласка, оберіть категорію\"\nfunction hideMessage(){\n  if(refs.text.classList.contains(\"library-message\")){\n    refs.text.classList.remove('library-message')\n    refs.text.classList.add('library-message-hidden')\n  }\n}\n\nconst fetchWatchedFilms = async idw => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${idw}?api_key=${API_KEY}`\n  );\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnWatched() {\n  onLoader();\n  hideMessage();\n  refs.filmList.innerHTML = '';\n  if (!savedWatchedFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>';\n    offLoader();\n  }\n  savedWatchedFilms.map(film =>\n    fetchWatchedFilms(film).then(film => {\n      rendOneCard(film).then(r => {\n        refs.filmList.insertAdjacentHTML('beforeend', r);\n        offLoader();\n      });\n    })\n  );\n}\n"],"names":["parcelRequire","$fPgXx","localStorage","setItem","JSON","stringify","$9b6cfdef6aa0953f$var$savedWatchedFilms","parse","getItem","split","$9b6cfdef6aa0953f$var$savedQueueFilms","$9b6cfdef6aa0953f$var$refs","btnQueue","document","querySelector","btnWatched","div","text","filmList","addEventListener","$gjiCh","onLoader","$9b6cfdef6aa0953f$var$hideMessage","innerHTML","offLoader","map","film1","async","id1","response","fetch","API_KEY","json","$9b6cfdef6aa0953f$var$fetchQueueFilms","then","film","$9b6cfdef6aa0953f$var$rendOneCard","r","insertAdjacentHTML","film2","idw1","$9b6cfdef6aa0953f$var$fetchWatchedFilms","$9b6cfdef6aa0953f$var$posterLinkGenerate","poster_path","genres","length","$32hWK","arrayOfGenres","filter","genre","id2","id","name","slice","$9b6cfdef6aa0953f$var$decipherGenresIds","yearOfRelease","release_date","$9b6cfdef6aa0953f$var$onYearOfFilm","title","vote_average","toFixed","asyncGenres","join","$9b6cfdef6aa0953f$var$patternOfCard","classList","contains","remove","add"],"version":3,"file":"library.bf653768.js.map"}