{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,KCCAC,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPL,OAAOC,eAAeI,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,gCDXaK,aAAXC,QAAQ,UAAWC,KAAKC,UADzB,CAAC,MAAO,OAAQ,OAAQ,OAAQ,SAE5CH,aAAaC,QAAQ,QAASC,KAAKC,UAHxB,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UAK5C,IAIaC,EAHPC,EAAoBH,KAAKI,MAAMN,aAAaO,QAAQ,WAAWC,MAAM,MACrEC,EAAkBP,KAAKI,MAAMN,aAAaO,QAAQ,SAASC,MAAM,MAEjEE,GAAON,EAOZ,CANCO,SAAUC,SAASC,cAAc,UACjCC,WAAYF,SAASC,cAAc,YACnCE,IAAKH,SAASC,cAAc,YAC5BG,KAAMJ,SAASC,cAAc,UAC7BI,EAAAzB,EAAA,CALWY,EAKX,aAAYQ,SAASC,cAAc,aACnCI,EAAAzB,EAAA,CANWY,EAMX,WAAUQ,SAASC,cAAc,eANtBT,GASbM,EAAKC,SAASO,iBAAiB,SAS/B,WAEIR,EAAKS,SAASC,UAAY,GACvBX,IACHC,EAAKS,SAASC,UAAY,gCAE5BX,EAAgBY,KAAI,SAAAC,G,OAAQC,EAAgBD,GAAME,MAAK,SAAAC,GAErD,IAAMC,EAAgBD,EAAKE,aAAanB,MAAM,KAC9CE,EAAKS,SAASS,mBAAmB,YAAY,yFAQTC,OANEJ,EAAKK,YAAY,2KAQjBD,OAFFJ,EAAKM,MAAM,yGAGVF,OADCH,EAAc,GAAG,oDACAG,OAAlBJ,EAAKO,aAAa,kC,UA5B3DtB,EAAKI,WAAWI,iBAAiB,SAiDjC,WAEIR,EAAKS,SAASC,UAAY,GACvBf,IACHK,EAAKS,SAASC,UAAY,gCAE5Bf,EAAkBgB,KAAI,SAAAY,G,OAAQC,EAAkBD,GAAMT,MAAK,SAAAC,GAEzD,IAAMC,EAAgBD,EAAKE,aAAanB,MAAM,KAC9CE,EAAKS,SAASS,mBAAmB,YAAY,yFAQTC,OANEJ,EAAKK,YAAY,2KAQjBD,OAFFJ,EAAKM,MAAM,yGAGVF,OADCH,EAAc,GAAG,oDACAG,OAAlBJ,EAAKO,aAAa,kC,UAnE3D,I,EAAMT,G,EAAkBN,EAAA7B,EAAA,CAAA6B,EAAAkB,GAAAC,MAAA,SAAAC,EAAOC,G,IACvBC,EACAC,E,kFADiBC,MAAM,GAAaZ,OAjB5B,uCAiB0CA,OAAdS,EAAG,aAAmBT,OAARa,EAAAC,U,cAAlDJ,EAAQK,EAAAC,K,SACMN,EAASO,O,cAAvBN,EAAKI,EAAAC,K,kBACJL,G,oDAHsBF,G,iCAyC/B,IAAMJ,EAAiB,W,MAAGjB,EAAA7B,EAAA,CAAA6B,EAAAkB,GAAAC,MAAA,SAAAC,EAAOU,G,IACzBR,EACAC,E,kFADiBC,MAAM,sCAAqDZ,OAAfkB,EAAI,aAAmBlB,OAARa,EAAAC,U,cAA5EJ,EAAQK,EAAAC,K,SACMN,EAASO,O,cAAvBN,EAAKI,EAAAC,K,kBACJL,G,2DAHwBO,G,gCAAV,E","sources":["src/js/buttons.js","node_modules/@swc/helpers/lib/_define_property.js"],"sourcesContent":["import { API_KEY } from './api-key';\n\n//заглушка айдішніків поки нема локального збереження\nconst id = [716037, 632639, 561743, 860741, 862504] //заглушка для черги\nconst idw = [16037, 532630, 617430, 760412, 76504] //заглушка для переглянутого\nlocalStorage.setItem('watched', JSON.stringify(idw))\nlocalStorage.setItem('queue', JSON.stringify(id))\n\nconst baseURL = \"https://api.themoviedb.org/3/movie/\"\nconst savedWatchedFilms = JSON.parse(localStorage.getItem('watched').split(','))\nconst savedQueueFilms = JSON.parse(localStorage.getItem('queue').split(','))\n\nconst refs = {\n  btnQueue: document.querySelector('#queue'),\n  btnWatched: document.querySelector('#watched'),\n  div: document.querySelector('#library'),\n  text: document.querySelector('#text'),\n  btnWatched: document.querySelector('#watched'),\n  filmList: document.querySelector('.film_list'),\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueue);\nrefs.btnWatched.addEventListener('click', onBtnWatched)\n\nconst fetchQueueFilms = async (id) => {\n  const response = await fetch(`${baseURL}${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n  };\n\nfunction onBtnQueue() {\n  // hideMessage();\n    refs.filmList.innerHTML = '';\n  if (!savedQueueFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>'\n  } \n  savedQueueFilms.map(film => fetchQueueFilms(film).then(film => \n  {\n    const yearOfRelease = film.release_date.split('-');\n    refs.filmList.insertAdjacentHTML(\"beforeend\",`<li id=\"\" class=\"film-list__item\">\n    <img\n    src=\"https://image.tmdb.org/t/p/w500${film.poster_path}\"\n    alt=\"Movie Name\"\n    class=\"film-list__item-poster\"\n    loading=\"lazy\"\n    />\n    <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n   <span class=\"film-list__item-genres\">жанри</span>\n   <span class=\"film-list__item-genres\">${yearOfRelease[0]}</span>\n    <span class=\"film-list__item-rate\">${film.vote_average}</span>\n    </div>\n    </li>`)\n}))\n\n}\n\n//заховати повідомлення \"будь ласка, оберіть категорію\"\n// function hideMessage(){\n//   if(refs.text.classList.contains(\"library-message\")){\n//     refs.text.classList.remove('library-message')\n//     refs.text.classList.add('library-message-hidden')\n//   }\n// }\n\nconst fetchWatchedFilms = async (idw) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${idw}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnWatched() {\n  // hideMessage();\n    refs.filmList.innerHTML = '';\n  if (!savedWatchedFilms) {\n    refs.filmList.innerHTML = '<p>Sorry, list is empty(</p>'\n  } \n  savedWatchedFilms.map(film => fetchWatchedFilms(film).then(film => \n  {\n    const yearOfRelease = film.release_date.split('-');\n    refs.filmList.insertAdjacentHTML(\"beforeend\",`<li id=\"\" class=\"film-list__item\">\n    <img\n    src=\"https://image.tmdb.org/t/p/w500${film.poster_path}\"\n    alt=\"Movie Name\"\n    class=\"film-list__item-poster\"\n    loading=\"lazy\"\n    />\n    <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n   <span class=\"film-list__item-genres\">жанри</span>\n   <span class=\"film-list__item-genres\">${yearOfRelease[0]}</span>\n    <span class=\"film-list__item-rate\">${film.vote_average}</span>\n    </div>\n    </li>`)\n}))\n\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n"],"names":["$bpxeT","parcelRequire","Object","defineProperty","$cec85eba0a352189$exports","value","default","obj","key","enumerable","configurable","writable","localStorage","setItem","JSON","stringify","$c07c620d873608c6$var$_obj","$c07c620d873608c6$var$savedWatchedFilms","parse","getItem","split","$c07c620d873608c6$var$savedQueueFilms","$c07c620d873608c6$var$refs","btnQueue","document","querySelector","btnWatched","div","text","$parcel$interopDefault","addEventListener","filmList","innerHTML","map","film1","$c07c620d873608c6$var$fetchQueueFilms","then","film","yearOfRelease","release_date","insertAdjacentHTML","concat","poster_path","title","vote_average","film2","$c07c620d873608c6$var$fetchWatchedFilms","$2TvXO","mark","_callee","id1","response","films","fetch","$hM3Qt","API_KEY","_ctx","sent","json","idw1"],"version":3,"file":"library.2a3d33b9.js.map"}