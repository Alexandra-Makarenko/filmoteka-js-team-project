{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,aAGA,MAEME,EAAO,CACXC,SAAUC,SAASC,cAAc,UACjCC,WAAYF,SAASC,cAAc,YACnCE,KAAMH,SAASC,cAAc,SAC7BG,SAAUJ,SAASC,cAAc,eAGnCH,EAAKC,SAASM,iBAAiB,SAS/B,WACEC,IACAR,EAAKM,SAASG,UAAY,GAC1B,IAC0BC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,MAAM,MACvDC,KAAIC,GAXAC,OAAMC,IAC5B,MAAMC,QAAiBC,MAAM,sCAAaF,aAAcnB,EAAAsB,WAExD,aADoBF,EAASG,MACjB,EASRC,CAAgBP,GAAMQ,MAAKC,IACzBC,EAAYD,GAAMD,MAAKG,IACrB3B,EAAKM,SAASsB,mBAAmB,YAAaD,EAAE,GAChD,K,CAGN,MAAOE,GACP7B,EAAKM,SAASG,UAAY,sD,KArB9BT,EAAKI,WAAWG,iBAAiB,SAiCjC,WACEuB,WACAtB,IACAR,EAAKM,SAASG,UAAY,GAC1B,IAC0BC,KAAKC,MAAMC,aAAaC,QAAQ,WAAWC,MAAM,MACzDC,KAAIgB,GAdEd,OAAMe,IAC9B,MAAMb,QAAiBC,MACrB,sCAAsCY,aAAejC,EAAAsB,WAGvD,aADoBF,EAASG,MACjB,EAUVW,CAAkBF,GAAMP,MAAKC,IAC3BC,EAAYD,GAAMD,MAAKG,IACrB3B,EAAKM,SAASsB,mBAAmB,YAAaD,GAC9CO,WAAW,GACX,K,CAGJ,MAAOL,GACP7B,EAAKM,SAASG,UAAY,sD,KAK9B,SAASD,IACJR,EAAKK,KAAK8B,UAAUC,SAAS,qBAC9BpC,EAAKK,KAAK8B,UAAUE,OAAO,mBAC3BrC,EAAKK,KAAK8B,UAAUG,IAAI,0B,CAI5B,SAASZ,EAAYD,GACnB,MAAMc,EAKR,SAA2Bd,GACzB,OAA2B,IAAvBA,EAAKc,OAAOC,OACP,iBAEFC,EAAAC,cACJlB,MAAKG,GACGA,EACJgB,QAAOC,IACN,IAAK,MAAM1B,KAAMO,EAAKc,OACpB,GAAIrB,EAAGA,KAAO0B,EAAM1B,GAClB,OAAO0B,EAAMC,I,IAIlB9B,KAAI6B,GAASA,EAAMC,SAEvBrB,MAAKG,GACAA,EAAEa,OAAS,EACNb,EAEF,IAAI,IAAIA,GAAGmB,MAAM,EAAG,GAAQ,U,CAzBxBC,CAAkBtB,GAC3BuB,EA4BR,SAAsBvB,GAEpB,OADsBA,EAAKwB,aAAanC,MAAM,I,CA7BxBoC,CAAazB,GACnC,OAgCFR,eAA6BQ,EAAMc,EAAQS,GACzC,GAAe,mBAAXT,EACF,MAAO,gBAAgBd,EAAKP,iDAEtBiC,EAAmB1B,gBAClBA,EAAK2B,4DAED3B,EAAKP,8GAIoBO,EAAK2B,qGAEAb,0GAEFS,EAAc,6DACRvB,EAAK4B,aAAaC,QAC3D,+CAMN,MAAMC,QAAoBhB,EAAOf,MAAKG,GAAKA,IAC3C,MAAO,gBAAgBF,EAAKP,iDAEpBiC,EAAmB1B,gBAClBA,EAAK2B,4DAED3B,EAAKP,8GAIoBO,EAAK2B,qGAEAG,EAAYC,KAAK,8GAEnBR,EAAc,6DACRvB,EAAK4B,aAAaC,QAC3D,8C,CAvECG,CAAchC,EAAMc,EAAQS,E,CA8ErC,SAASG,EAAmB1B,GAC1B,OAAyB,OAArBA,EAAKiC,YACA,mCAAmCjC,EAAKiC,eAE1C,iH","sources":["src/library.js","src/js/buttons.js"],"sourcesContent":["import './js/loader';\nimport './sass/index.scss';\nimport './js/api-key';\nimport './js/buttons';\n// import './js/pagination';\nimport './js/page-up';\nimport './js/array-of-genres';\nimport './js/footer-modal';\nimport './js/team-photo';\nimport './js/movie-modal-local-storage';\nimport './js/modal-open';\nimport './js/modal-close';\n","import { API_KEY } from './api-key';\nimport { arrayOfGenres } from './array-of-genres';\n\nconst baseURL = 'https://api.themoviedb.org/3/movie/';\n\nconst refs = {\n  btnQueue: document.querySelector('#queue'),\n  btnWatched: document.querySelector('#watched'),\n  text: document.querySelector('#text'),\n  filmList: document.querySelector('.film_list'),\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueue);\nrefs.btnWatched.addEventListener('click', onBtnWatched);\n\nconst fetchQueueFilms = async id => {\n  const response = await fetch(`${baseURL}${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnQueue() {\n  hideMessage();\n  refs.filmList.innerHTML = '';\n  try{\n    const savedQueueFilms = JSON.parse(localStorage.getItem('queue').split(','));\n    savedQueueFilms.map(film =>\n      fetchQueueFilms(film).then(film => {\n        rendOneCard(film).then(r => {\n          refs.filmList.insertAdjacentHTML('beforeend', r);\n        });\n      })\n    );\n  } catch (error) {\n    refs.filmList.innerHTML = '<p class=\"library-message\">Sorry, list is empty(</p>';\n  }\n}\n\nconst fetchWatchedFilms = async idw => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${idw}?api_key=${API_KEY}`\n  );\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnWatched() {\n  onLoader();\n  hideMessage();\n  refs.filmList.innerHTML = '';\n  try{\n  const savedWatchedFilms = JSON.parse(localStorage.getItem('watched').split(','));\n  savedWatchedFilms.map(film =>\n    fetchWatchedFilms(film).then(film => {\n      rendOneCard(film).then(r => {\n        refs.filmList.insertAdjacentHTML('beforeend', r);\n        offLoader();\n      });\n    })\n  );\n  } catch (error){\n    refs.filmList.innerHTML = '<p class=\"library-message\">Sorry, list is empty(</p>';\n  }\n}\n\n//заховати повідомлення \"будь ласка, оберіть категорію\"\nfunction hideMessage(){\n  if(refs.text.classList.contains(\"library-message\")){\n    refs.text.classList.remove('library-message')\n    refs.text.classList.add('library-message-hidden')\n  }\n}\n\nfunction rendOneCard(film) {\n  const genres = decipherGenresIds(film);\n  const yearOfRelease = onYearOfFilm(film);\n  return patternOfCard(film, genres, yearOfRelease);\n}\n\nfunction decipherGenresIds(film) {\n  if (film.genres.length === 0) {\n    return 'Without genres';\n  }\n  return arrayOfGenres\n    .then(r => {\n      return r\n        .filter(genre => {\n          for (const id of film.genres) {\n            if (id.id === genre.id) {\n              return genre.name;\n            }\n          }\n        })\n        .map(genre => genre.name);\n    })\n    .then(r => {\n      if (r.length < 3) {\n        return r;\n      }\n      return [...[...r].slice(0, 2), ...['Other']];\n    });\n}\n\nfunction onYearOfFilm(film) {\n  const yearOfRelease = film.release_date.split('-');\n  return yearOfRelease;\n}\n\nasync function patternOfCard(film, genres, yearOfRelease) {\n  if (genres === 'Without genres') {\n    return `<li film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    film-id=\"${film.id}\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n    <div class=\"film-list__item-details\">\n      <span class=\"film-list__item-genres\">${genres}</span>\n      <span class=\"film-list__item-strip\">|</span>\n      <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${film.vote_average.toFixed(\n        1\n      )}&nbsp;</span>\n    </div>\n  </div>\n</li>`;\n  }\n  const asyncGenres = await genres.then(r => r);\n  return `<li film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    film-id=\"${film.id}\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n    <div class=\"film-list__item-details\">\n      <span class=\"film-list__item-genres\">${asyncGenres.join(', ')}</span>\n      <span class=\"film-list__item-strip\">|</span>\n      <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${film.vote_average.toFixed(\n        1\n      )}&nbsp;</span>\n    </div>\n  </div>\n</li>`;\n}\n\nfunction posterLinkGenerate(film) {\n  if (film.poster_path !== null) {\n    return `\"https://image.tmdb.org/t/p/w500${film.poster_path}\"`;\n  }\n  return `\"https://raw.githubusercontent.com/Alexandra-Makarenko/filmoteka-js-team-project/main/src/images/no-poster.jpg\"`;\n}"],"names":["parcelRequire","$fPgXx","$9b6cfdef6aa0953f$var$refs","btnQueue","document","querySelector","btnWatched","text","filmList","addEventListener","$9b6cfdef6aa0953f$var$hideMessage","innerHTML","JSON","parse","localStorage","getItem","split","map","film1","async","id","response","fetch","API_KEY","json","$9b6cfdef6aa0953f$var$fetchQueueFilms","then","film","$9b6cfdef6aa0953f$var$rendOneCard","r","insertAdjacentHTML","error","onLoader","film2","idw","$9b6cfdef6aa0953f$var$fetchWatchedFilms","offLoader","classList","contains","remove","add","genres","length","$32hWK","arrayOfGenres","filter","genre","name","slice","$9b6cfdef6aa0953f$var$decipherGenresIds","yearOfRelease","release_date","$9b6cfdef6aa0953f$var$onYearOfFilm","$9b6cfdef6aa0953f$var$posterLinkGenerate","title","vote_average","toFixed","asyncGenres","join","$9b6cfdef6aa0953f$var$patternOfCard","poster_path"],"version":3,"file":"library.4a28669d.js.map"}