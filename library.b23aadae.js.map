{"mappings":"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","sources":["src/library.js","src/js/buttons.js"],"sourcesContent":["import './js/loader';\nimport './sass/index.scss';\nimport './js/api-key';\nimport './js/buttons';\n// import './js/pagination';\nimport './js/page-up';\nimport './js/array-of-genres';\nimport './js/footer-modal';\nimport './js/team-photo';\nimport './js/movie-modal-local-storage';\nimport './js/modal-open';\nimport './js/modal-close';\n","import { API_KEY } from './api-key';\nimport { arrayOfGenres } from './array-of-genres';\n\nconst baseURL = 'https://api.themoviedb.org/3/movie/';\n\nconst refs = {\n  btnQueue: document.querySelector('#queue'),\n  btnWatched: document.querySelector('#watched'),\n  text: document.querySelector('#text'),\n  filmList: document.querySelector('.film_list'),\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueue);\nrefs.btnWatched.addEventListener('click', onBtnWatched);\n\nconst fetchQueueFilms = async id => {\n  const response = await fetch(`${baseURL}${id}?api_key=${API_KEY}`);\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnQueue() {\n  hideMessage();\n  refs.filmList.innerHTML = '';\n  try{\n    const savedQueueFilms = JSON.parse(localStorage.getItem('queued').split(','));\n    savedQueueFilms.map(film =>\n      fetchQueueFilms(film).then(film => {\n        rendOneCard(film).then(r => {\n          refs.filmList.insertAdjacentHTML('beforeend', r);\n        });\n      })\n    );\n  } catch (error) {\n    refs.filmList.innerHTML = '<p class=\"library-message\">Sorry, list is empty(</p>';\n  }\n}\n\nconst fetchWatchedFilms = async idw => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${idw}?api_key=${API_KEY}`\n  );\n  const films = await response.json();\n  return films;\n};\n\nfunction onBtnWatched() {\n  // onLoader();\n  hideMessage();\n  refs.filmList.innerHTML = '';\n  try{\n  const savedWatchedFilms = JSON.parse(localStorage.getItem('watched').split(','));\n  savedWatchedFilms.map(film =>\n    fetchWatchedFilms(film).then(film => {\n      rendOneCard(film).then(r => {\n        refs.filmList.insertAdjacentHTML('beforeend', r);\n        // offLoader();\n      });\n    })\n  );\n  } catch (error){\n    refs.filmList.innerHTML = '<p class=\"library-message\">Sorry, list is empty(</p>';\n  }\n}\n\n//заховати повідомлення \"будь ласка, оберіть категорію\"\nfunction hideMessage(){\n  if(refs.text.classList.contains(\"library-message\")){\n    refs.text.classList.remove('library-message')\n    refs.text.classList.add('library-message-hidden')\n  }\n}\n\nfunction rendOneCard(film) {\n  const genres = decipherGenresIds(film);\n  const yearOfRelease = onYearOfFilm(film);\n  return patternOfCard(film, genres, yearOfRelease);\n}\n\nfunction decipherGenresIds(film) {\n  if (film.genres.length === 0) {\n    return 'Without genres';\n  }\n  return arrayOfGenres\n    .then(r => {\n      return r\n        .filter(genre => {\n          for (const id of film.genres) {\n            if (id.id === genre.id) {\n              return genre.name;\n            }\n          }\n        })\n        .map(genre => genre.name);\n    })\n    .then(r => {\n      if (r.length < 3) {\n        return r;\n      }\n      return [...[...r].slice(0, 2), ...['Other']];\n    });\n}\n\nfunction onYearOfFilm(film) {\n  const yearOfRelease = film.release_date.split('-');\n  return yearOfRelease;\n}\n\nasync function patternOfCard(film, genres, yearOfRelease) {\n  if (genres === 'Without genres') {\n    return `<li film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    film-id=\"${film.id}\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n    <div class=\"film-list__item-details\">\n      <span class=\"film-list__item-genres\">${genres}</span>\n      <span class=\"film-list__item-strip\">|</span>\n      <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${film.vote_average.toFixed(\n        1\n      )}&nbsp;</span>\n    </div>\n  </div>\n</li>`;\n  }\n  const asyncGenres = await genres.then(r => r);\n  return `<li film-id=\"${film.id}\" class=\"film-list__item\">\n  <img\n    src=${posterLinkGenerate(film)}\n    alt=\"${film.title}\"\n    class=\"film-list__item-poster\"\n    film-id=\"${film.id}\"\n    loading=\"lazy\"\n  />\n  <div class=\"film-list__item-info\">\n    <h3 class=\"film-list__item-title\">${film.title}</h3>\n    <div class=\"film-list__item-details\">\n      <span class=\"film-list__item-genres\">${asyncGenres.join(', ')}</span>\n      <span class=\"film-list__item-strip\">|</span>\n      <span class=\"film-list__item-year\">${yearOfRelease[0]}</span>\n      <span class=\"film-list__item-rate\">&nbsp;${film.vote_average.toFixed(\n        1\n      )}&nbsp;</span>\n    </div>\n  </div>\n</li>`;\n}\n\nfunction posterLinkGenerate(film) {\n  if (film.poster_path !== null) {\n    return `\"https://image.tmdb.org/t/p/w500${film.poster_path}\"`;\n  }\n  return `\"https://raw.githubusercontent.com/Alexandra-Makarenko/filmoteka-js-team-project/main/src/images/no-poster.jpg\"`;\n}"],"names":["parcelRequire","$bpxeT","$c07c620d873608c6$var$refs","btnQueue","document","querySelector","btnWatched","text","filmList","addEventListener","$c07c620d873608c6$var$hideMessage","innerHTML","JSON","parse","localStorage","getItem","split","map","film1","$c07c620d873608c6$var$fetchQueueFilms","then","film","$c07c620d873608c6$var$rendOneCard","r","insertAdjacentHTML","error","film2","$c07c620d873608c6$var$fetchWatchedFilms","$parcel$interopDefault","$2TvXO","mark","_callee","id","response","films","fetch","concat","$hM3Qt","API_KEY","_ctx","sent","json","idw","classList","contains","remove","add","genres","length","$2cELT","arrayOfGenres","filter","genre","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","name","err","return","$8nrFW","slice","$c07c620d873608c6$var$decipherGenresIds","yearOfRelease","release_date","$c07c620d873608c6$var$onYearOfFilm","$c07c620d873608c6$var$_patternOfCard","apply","this","arguments","$c07c620d873608c6$var$patternOfCard","asyncGenres","$c07c620d873608c6$var$posterLinkGenerate","title","vote_average","toFixed","join","poster_path"],"version":3,"file":"library.b23aadae.js.map"}